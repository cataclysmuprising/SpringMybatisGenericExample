<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.t3k.products.fams.core.mapper.stockTaking.StockTakeMapper">

	<resultMap type="StockTakeBean" id="StockTakeResult">
		<id property="id" column="id" />
		<result property="locationId" column="location_id" />
		<result property="costCenterId" column="cost_center_id" />
		<result property="downloadUserId" column="download_user_id" />
		<result property="uploadUserId" column="upload_user_id" />
		<result property="downloadDate" column="download_date" />
		<result property="uploadStartDate" column="upload_start_date" />
		<result property="uploadEndDate" column="upload_end_date" />
		<result property="deviceId" column="device_id" />
		<result property="recordRegId" column="record_reg_id"/>
		<result property="recordUpdId" column="record_upd_id"/>
		<result property="recordRegDate" column="record_reg_date"/>
		<result property="recordUpdDate" column="record_upd_date"/>			
	</resultMap>

	<sql id="self_table">
		from tbl_stocktake st
	</sql>

	<sql id="columns">
		select distinct
		st.id,
		st.record_reg_id,
		st.record_upd_id,
		st.record_reg_date,
		st.record_upd_date,		
		st.location_id,
		st.cost_center_id,
		st.download_user_id,
		st.upload_user_id,
		st.download_date,
		st.upload_start_date,
		st.upload_end_date,
		st.device_id
	</sql>


	<sql id="criterias">
		<where>
			<if test="locationId != null">location_id= #{locationId}</if>
			<if test="costCenterId != null">and cost_center_id= #{costCenterId}</if>
			<if test="downloadUserId != null">and download_user_id= #{downloadUserId}</if>
			<if test="uploadUserId != null">and upload_user_id= #{uploadUserId}</if>
			<if test="downloadDate != null">and cast(download_date as date)= cast(#{downloadDate} as date)
			</if>
			<if test="forToday != null">and cast(upload_start_date as date)= cast(getDate() as date)
			</if>
			<if test="uploadStartDate != null">and upload_start_date= #{uploadStartDate}</if>
		</where>
	</sql>

	<sql id="orders">
		order by
		<choose>
			<when test="orderBy == 'duid'">
				download_user_id ${orderAs}
			</when>
			<when test="orderBy == 'upuid'">
				upload_user_id ${orderAs}
			</when>
			<otherwise>
				device_id asc
			</otherwise>
		</choose>
	</sql>

	<insert id="insert" parameterType="StockTakeBean" useGeneratedKeys="true" keyProperty="id">
		insert into tbl_stocktake (
		location_id,
		cost_center_id,
		download_user_id,
		upload_user_id,
		download_date,
		upload_start_date,
		<if test="uploadEndDate !=null">upload_end_date,</if>
		device_id,
		record_reg_id,
		record_upd_id,
		record_reg_date,
		record_upd_date		
		) values (
		#{locationId},
		#{costCenterId},
		#{downloadUserId},
		#{uploadUserId},
		#{downloadDate},
		#{uploadStartDate},
		<if test="uploadEndDate != null">#{uploadEndDate},</if>
		#{deviceId},
		#{recordRegId},
		#{recordUpdId},
		#{recordRegDate},
		#{recordUpdDate}			
		)
	</insert>

	<insert id="insertHistory">
		insert into tbl_stocktake_history (
		id,
		record_reg_id,
		record_upd_id,
		record_reg_date,
		record_upd_date,		
		transaction_date,
		transaction_type,
		location_id,
		cost_center_id,
		download_user_id,
		upload_user_id,
		download_date,
		upload_start_date,
		<if test="uploadEndDate !=null">upload_end_date,</if>
		device_id
		) values (
		#{id},
		#{recordRegId},
		#{recordUpdId},
		#{recordRegDate},
		#{recordUpdDate},
		getDate(),
		#{transactionType},
		#{locationId},
		#{costCenterId},
		#{downloadUserId},
		#{uploadUserId},
		#{downloadDate},
		#{uploadStartDate},
		<if test="uploadEndDate != null">#{uploadEndDate},</if>
		#{deviceId}
		)
	</insert>

	<update id="update" parameterType="StockTakeBean">
		update tbl_stocktake
		<set>
			record_upd_id = #{recordUpdId},
			record_upd_date = getDate(),		
			<if test="locationId != null">location_id= #{locationId},</if>
			<if test="costCenterId != null">cost_center_id= #{costCenterId},</if>
			<if test="downloadUserId != null">download_user_id= #{downloadUserId},</if>
			<if test="uploadUserId != null">upload_user_id= #{uploadUserId},</if>
			<if test="downloadDate != null">download_date= #{downloadDate},</if>
			<if test="uploadStartDate != null">upload_start_date= #{uploadStartDate},</if>
			<if test="uploadEndDate != null">upload_end_date= #{uploadEndDate},</if>
			<if test="deviceId != null">device_id= #{deviceId},</if>
		</set>
		where id = #{id}
	</update>

	<delete id="delete" parameterType="map">
		delete from tbl_stocktake
		<where>
			<if test="id != null">
				id = #{id}
			</if>
		</where>
	</delete>

	<select id="selectById" parameterType="int" resultMap="StockTakeResult">
		<include refid="columns" />
		<include refid="self_table" />
		where st.id = #{id}
	</select>

	<select id="selectByCriteria" parameterType="map" resultMap="StockTakeResult">
		<include refid="columns" />
		<include refid="self_table" />
		<include refid="criterias" />
		<include refid="orders" />
		<if
			test="offset != null and limit !=null and offset &gt; -1 and limit &gt; 0">
			offset #{offset} rows
			fetch next #{limit} rows only;
		</if>
	</select>

	<select id="selectCountByCriteria" resultType="int"
		parameterType="map">
		select count(distinct st.id)
		<include refid="self_table" />
		<include refid="criterias" />
	</select>
</mapper>
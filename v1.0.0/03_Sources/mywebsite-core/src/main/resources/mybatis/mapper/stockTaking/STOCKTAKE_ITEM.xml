<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.t3k.products.fams.core.mapper.stockTaking.StockTakeItemMapper">

	<resultMap type="StockTakeItemBean" id="StockTakeItemResult">
		<id property="id" column="id" />
		<result property="assetId" column="asset_id" />
		<result property="stockUploadId" column="stock_upload_id" />
		<result property="faStatus" column="fa_status" />
		<result property="remark" column="remark" />
		<result property="scanned" column="scanned" />
		<result property="recordRegId" column="record_reg_id"/>
		<result property="recordUpdId" column="record_upd_id"/>
		<result property="recordRegDate" column="record_reg_date"/>
		<result property="recordUpdDate" column="record_upd_date"/>			
		<result property="uploadEndDate" column="upload_end_date" />
		<association property="content" column="content_id" select="com.t3k.products.fams.core.mapper.master.StaticContentMapper.selectById" />
	</resultMap>

	<sql id="self_table">
		from tbl_stocktake_item st
	</sql>
		
	<sql id="columns">
		select distinct
		st.id,
		st.record_reg_id,
		st.record_upd_id,
		st.record_reg_date,
		st.record_upd_date,		
		st.stock_upload_id,
		st.asset_id,
		st.fa_status,
		st.remark,
		st.scanned,
		st.upload_end_date,
		content_id
	</sql>
	

	<sql id="criterias">
		<where>
			<if test="id != null">
				st.id = #{id}
			</if>
		</where>
	</sql>

	<sql id="orders">
		order by
		<choose>
			<when test="orderBy == 'stid'">
				stock_upload_id ${orderAs}
			</when>
			<when test="orderBy == 'assetid'">
				id ${orderAs}
			</when>	
			<otherwise>
				id asc
			</otherwise>
		</choose>
	</sql>

	<insert id="insert" parameterType="StockTakeItemBean" useGeneratedKeys="true" keyProperty="id">
		insert into tbl_stocktake_item (
		stock_upload_id,
		asset_id,
		fa_status,
		<if test="remark !=null">remark,</if>
		scanned,
		upload_end_date,
		record_reg_id,
		record_upd_id,
		record_reg_date,
		record_upd_date,
		<if test="contentId !=null">content_id</if>	
		) values (
		#{stockUploadId},
		#{assetId},
		#{faStatus},
		<if test="remark != null">#{remark},</if>
		#{scanned},
		getDate(),
		#{recordRegId},
		#{recordUpdId},
		#{recordRegDate},
		#{recordUpdDate},
		<if test="contentId != null">#{contentId}</if>			
		)
	</insert>
	
	<insert id="insertHistory">
		insert into tbl_stocktake_item_history (
		record_reg_id,
		record_upd_id,
		record_reg_date,
		record_upd_date,		
		transaction_date,
		transaction_type,		
		stock_upload_id,
		asset_id,
		fa_status,
		<if test="remark !=null">remark,</if>
		scanned,
		<if test="contentId !=null">content_id</if>
		) values (
		#{recordRegId},
		#{recordUpdId},
		#{recordRegDate},
		#{recordUpdDate},
		getDate(),
		#{transactionType},	
		#{stockUploadId},
		#{assetId},
		#{faStatus},
		<if test="remark != null">#{remark},</if>
		#{scanned},
		<if test="contentId != null">#{contentId}</if>
		)
	</insert>
	
	<update id="update" parameterType="StockTakeItemBean">
		update tbl_stocktake_item
		<set>
			record_upd_id = #{recordUpdId},
			record_upd_date = getDate(),		
			<if test="stockUploadId != null">stock_upload_id= #{stockUploadId},</if>
			<if test="assetId != null">asset_id= #{assetId},</if>
			<if test="faStatus != null">fa_status= #{faStatus},</if>
			<if test="remark != null">remark= #{remark},</if>
			<if test="scanned != null">scanned= #{scanned},</if>
			<if test="contentId != null">content_id = #{contentId},</if>
		</set>
		where id = #{id} 
	</update>

	<delete id="delete" parameterType="map">
		delete from tbl_stocktake_item
		<where>
			<if test="id != null">
				 id = #{id}
			</if>
		</where>
	</delete>
	
	<select id="selectById" parameterType="int" resultMap="StockTakeItemResult">
		<include refid="columns" />
		<include refid="self_table" />
		where st.id = #{id} 
	</select>
	

	<select id="selectByCriteria" parameterType="map" resultMap="StockTakeItemResult">
		<include refid="columns" />
		<include refid="self_table"/>	
		<include refid="criterias" />
		<include refid="orders" />
		<if test="offset != null and limit !=null and offset &gt; -1 and limit &gt; 0">
			offset #{offset} rows
			fetch next #{limit} rows only;
		</if>
	</select>

	<select id="selectCountByCriteria" resultType="int" parameterType="map">
		select count(distinct st.id)
		<include refid="self_table" />
		<include refid="criterias"/>
	</select>
</mapper>
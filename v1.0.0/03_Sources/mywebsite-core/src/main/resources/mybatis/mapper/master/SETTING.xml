<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mycom.products.mywebsite.core.mapper.master.SettingMapper">

	<resultMap type="SettingBean" id="Parent_SettingResult">
		<id 	property="id" 				column="id"/>
		<result property="name" 			column="setting_name"/>
		<result property="value" 			column="setting_value"/>
		<result property="type" 			column="setting_type"/>
		<result property="group" 			column="setting_group"/>
		<result property="subGroup" 		column="setting_sub_group"/>
	</resultMap>
	
	<resultMap type="SettingBean" id="SettingResult" extends="Parent_SettingResult">
		<result property="recordRegId"  	column="record_reg_id"/>
		<result property="recordUpdId"  	column="record_upd_id"/>
		<result property="recordRegDate" 	column="record_reg_date"/>
		<result property="recordUpdDate" 	column="record_upd_date"/>			
	</resultMap>

	<sql id="tables">
		FROM tbl_setting setting
	</sql>

	<sql id="meta_columns">
		setting.record_reg_id,
		setting.record_upd_id,
		setting.record_reg_date,
		setting.record_upd_date,
	</sql>
		
	<sql id="main_columns">
		setting.id,
		setting.setting_name,
		setting.setting_value,
		setting.setting_type,
		setting.setting_group,
		setting.setting_sub_group
	</sql>

	<sql id="criterias">
		<if test="criteria != null">
			<where>
				<if test="criteria.id != null">
					AND setting.id = ${criteria.id}
				</if>
				<if test="criteria.ids != null">
					AND setting.id IN
				    <foreach item="id" index="index" collection="criteria.ids" open="(" separator="," close=")">
				        ${id}
				    </foreach>
				</if>				
				<if test="criteria.name != null">
					AND setting.setting_name = #{criteria.name}
				</if>
				<if test="criteria.value != null">
					AND setting.setting_value = #{criteria.value}
				</if>
				<if test="criteria.type != null">
					AND setting.setting_type = #{criteria.type}
				</if>
				<if test="criteria.group != null">
					AND setting.setting_group = #{criteria.group}
				</if>
				<if test="criteria.subGroup != null">
					AND setting.setting_sub_group = #{criteria.subGroup}
				</if>				
				<if test="criteria.word != null">
					AND 
					(setting.setting_name 		 LIKE '%${criteria.word}%'
					OR setting.setting_value 	 LIKE '%${criteria.word}%'
					OR setting.setting_type 	 LIKE '%${criteria.word}%'
					OR setting.setting_group 	 LIKE '%${criteria.word}%'
					OR setting.setting_sub_group LIKE '%${criteria.word}%'
					)
				</if>
			</where>
		</if>
	</sql>
		
	<sql id="orders">
		ORDER BY
		<choose>
			<when test="criteria !=null and criteria.orderBy == 'id'">
				setting.id ${criteria.orderAs}
			</when>	
			<when test="criteria !=null and criteria.orderBy == 'group'">
				setting.setting_group ${criteria.orderAs}
			</when>	
			<when test="criteria !=null and criteria.orderBy == 'subGroup'">
				setting.setting_sub_group ${criteria.orderAs}
			</when>	
			<when test="criteria !=null and criteria.orderBy == 'name'">
				setting.setting_name ${criteria.orderAs}
			</when>
			<otherwise>
				setting.id DESC
			</otherwise>
		</choose>
	</sql>
	
	<insert id="insert" parameterType="SettingBean" useGeneratedKeys="true" keyProperty="id">
		insert into tbl_setting(
		setting_name,
		setting_value,
		setting_type,
		setting_group,
		setting_sub_group,
		record_reg_id,
		record_upd_id,
		record_reg_date,
		record_upd_date
		) values (
		#{name},
		#{value},
		#{type},
		#{group},
		#{subGroup},
		#{recordRegId},
		#{recordUpdId},
		#{recordRegDate},
		#{recordUpdDate}
		)
	</insert>
	
	<insert id="insertHistory" parameterType="SettingBean">
		insert into tbl_setting_history(
		id,
		record_reg_id,
		record_upd_id,
		record_reg_date,
		record_upd_date,		
		transaction_date,
		transaction_type,		
		setting_name,
		setting_value,
		setting_type,
		setting_group,
		setting_sub_group
		) values (
		#{id},
		#{recordRegId},
		#{recordUpdId},
		#{recordRegDate},
		#{recordUpdDate},
		getDate(),
		#{transactionType},	
		#{name},
		#{value},
		#{type},
		#{group},
		#{subGroup}
		)
	</insert>	
	
	<update id="update" parameterType="SettingBean">
		update tbl_setting
		<set>
			record_upd_id = #{recordUpdId},
			record_upd_date = getDate(),
			<if test="name !=null">setting_name=#{name},</if>
			<if test="value !=null">setting_value=#{value},</if>
			<if test="type !=null">setting_type=#{type},</if>
			<if test="group !=null">setting_group=#{group},</if> 
			<if test="subGroup !=null">setting_sub_group=#{subGroup}</if>
		</set>
		where id = #{id}
	</update>

	<delete id="delete" parameterType="map">
		delete from tbl_setting
		<where>
			<if test="id != null">
				 id = #{id}
			</if>
		</where>
	</delete>
	
	<select id="selectByPrimaryKey" resultMap="SettingResult">
		SELECT
		<include refid="meta_columns" />
		<include refid="main_columns" />
		<include refid="tables" />
		WHERE 
			setting.id = #{primaryKey}
	</select>
		
	<select id="selectSingleRecord" resultMap="SettingResult">
		SELECT
		<include refid="meta_columns" />
		<include refid="main_columns" />
		<include refid="tables" />
		<include refid="criterias" />
	</select>
	
	<select id="selectMultiRecords" resultMap="SettingResult">
		SELECT
		<include refid="meta_columns" />
		<include refid="main_columns" />
		<include refid="tables" />
		<include refid="criterias" />
		<include refid="orders" />
		<if test="criteria !=null and criteria.offset != null and criteria.limit !=null and criteria.offset &gt; -1 and criteria.limit &gt; 0">
			OFFSET #{criteria.offset} ROWS
			FETCH NEXT #{criteria.limit} ROWS ONLY;
		</if>
	</select>

	<select id="selectCounts" resultType="int">
		SELECT count(DISTINCT setting.id)
		<include refid="tables" />
		<include refid="criterias" />
	</select>
	
</mapper>
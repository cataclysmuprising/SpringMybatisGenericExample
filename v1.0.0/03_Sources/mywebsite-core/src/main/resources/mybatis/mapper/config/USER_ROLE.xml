<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mycom.products.mywebsite.core.mapper.config.UserRoleMapper">

	<resultMap type="UserRoleBean" id="UserRoleResult">
		<result property="recordRegId" column="record_reg_id"/>
		<result property="recordUpdId" column="record_upd_id"/>
		<result property="recordRegDate" column="record_reg_date"/>
		<result property="recordUpdDate" column="record_upd_date"/>	
		<association property="user" column="user_id" select="com.mycom.products.mywebsite.core.mapper.config.UserMapper.selectById" />
		<association property="role" column="role_id" select="com.mycom.products.mywebsite.core.mapper.config.RoleMapper.selectById" />
	</resultMap>

	<sql id="self_table">
		from tbl_user_role ur
	</sql>
	
	<sql id="columns">
		select
		record_reg_id,
		record_upd_id,
		record_reg_date,
		record_upd_date,		
		user_id,
		role_id
	</sql>

	<sql id="criterias">
		<where>
			<if test="userId != null">
				and user_id = #{userId}
			</if>	
			<if test="roleId != null">
				and role_id = #{roleId}
			</if>
		</where>
	</sql>
		
	<sql id="orders">
		order by
		<choose>
			<when test="orderBy == 'userId'">
				user_id ${orderAs}
			</when>
			<when test="orderBy == 'roleId'">
				role_id ${orderAs}
			</when>
			<otherwise>
				user_id DESC
			</otherwise>
		</choose>
	</sql>
	
	<insert id="insert" parameterType="UserRoleBean">
		insert into tbl_user_role(
		user_id,
		role_id,
		record_reg_id,
		record_upd_id,
		record_reg_date,
		record_upd_date		
		) values (
		#{user.id},
		#{role.id},
		#{recordRegId},
		#{recordUpdId},
		#{recordRegDate},
		#{recordUpdDate}		
		)
	</insert>
	
	<insert id="insertHistory" parameterType="UserRoleBean">
		insert into tbl_user_role_history(
		record_reg_id,
		record_upd_id,
		record_reg_date,
		record_upd_date,		
		transaction_date,
		transaction_type,	
		user_id,
		role_id
		) values (
		#{recordRegId},
		#{recordUpdId},
		#{recordRegDate},
		#{recordUpdDate},
		getDate(),
		#{transactionType},	
		#{user.id},
		#{role.id}
		)
	</insert>
	
	<update id="update" parameterType="UserRoleBean">
		update tbl_user_role
		<set>
			record_upd_id = #{recordUpdId},
			record_upd_date = getDate(),		
			<if test="user.id != 0">user_id= #{user.id},</if>
			<if test="role.id != 0">role_id= #{role.id},</if>
		</set>
		<where>
			<if test="user.id != null">
				 user_id = #{user.id}
			</if>
			<if test="role.id != null">
				 and role_id = #{role.id}
			</if>			
		</where>
	</update>

	<delete id="delete" parameterType="map">
		delete from  tbl_user_role 
		<where>
			<if test="id != null">
				 id = ${id}
			</if>
			<if test="userId != null">
				and user_id = ${userId}
			</if>
			<if test="roleId != null">
				and role_id = ${roleId}
			</if>
			
		</where>
	</delete>
		
	<select id="selectByCriteria" parameterType="map" resultMap="UserRoleResult">
		<include refid="columns" />
		<include refid="self_table" />
		<include refid="criterias" />
		<include refid="orders" />
		<if test="offset != null and limit !=null and offset &gt; -1 and limit &gt; 0">
			offset #{offset} rows
			fetch next #{limit} rows only;
		</if>
	</select> 
	
	<select id="selectCountByCriteria" resultType="int" parameterType="map">
		select count(*)
		<include refid="self_table" />
		<include refid="criterias"/>
	</select>	
</mapper>
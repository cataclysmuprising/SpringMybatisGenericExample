<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mycom.products.mywebsite.core.mapper.config.ActionMapper">
	<resultMap type="ActionBean" id="ActionResult">
		<id property="id" column="id" />
		<result property="page" column="page" />
		<result property="actionName" column="action_name" />
		<result property="displayName" column="display_name" />
		<result property="url" column="url" />
		<result property="actionType" column="action_type" />
		<result property="description" column="description" />
	</resultMap>
	
	<resultMap type="ActionBean" id="ActionWithRolesResult">
		<id property="id" column="id" />
		<result property="page" column="page" />
		<result property="actionName" column="action_name" />
		<result property="displayName" column="display_name" />
		<result property="url" column="url" />
		<result property="actionType" column="action_type" />
		<result property="description" column="description" />
		<association property="roles" column="id" select="com.mycom.products.mywebsite.core.mapper.config.RoleMapper.selectByActionId" />
	</resultMap>

	<sql id="self_table">
		from tbl_action a
	</sql>
		
	<sql id="joined_tables">
		from tbl_action a
		<if test="roleId != null">
			<choose>
				<when test="selectType == 'all'">
					left join tbl_role_action ra
				</when>
				<otherwise>
					inner join tbl_role_action ra
				</otherwise>
			</choose>
			on a.id = ra.action_id and a.id in 
			(select action_id from tbl_role_action where role_id=#{roleId})
		</if>
	</sql>
	
	<sql id="columns">
		select distinct
		a.id,
		page,
		action_name,
		display_name,
		url,
		action_type,
		description
	</sql>

	<sql id="criterias">
		<where>
			<if test="id != null">
				a.id = #{id}
			</if>
			<if test="page != null">
				and page = #{page}
			</if>
			<if test="actionType != null">
				and action_type = #{actionType}
			</if>	
			<if test="includeIds != null">
				AND a.id IN
			    <foreach item="item" index="index" collection="includeIds" open="(" separator="," close=")">
			        ${item}
			    </foreach>
			</if>					
			<if test="word != null">
			    and
			    (page like '%${word}%'
				or action_name like '%${word}%'
				or display_name like '%${word}%'
				or url like '%${word}%')
			</if>
		</where>
	</sql>
			
	<sql id="orders">
		order by
		<choose>
			<when test="orderBy == 'id'">
				a.id ${orderAs}
			</when>
			<when test="orderBy == 'page'">
				page ${orderAs}
			</when>
			<when test="orderBy == 'actionName'">
				action_name ${orderAs}
			</when>
			<when test="orderBy == 'displayName'">
				display_name ${orderAs}
			</when>
			<when test="orderBy == 'actionType'">
				action_type ${orderAs}
			</when>						
			<otherwise>
				a.id DESC
			</otherwise>
		</choose>
	</sql>
	
	<update id="update" parameterType="ActionBean">
		update tbl_action
		<set>
			<if test="page != null">page= #{page},</if>
			<if test="actionName != null">action_name= #{actionName},</if>
			<if test="displayName != null">display_name = #{displayName},</if>
			<if test="actionType != null">action_type = #{actionType},</if>
			<if test="url != null">url= #{url},</if>
		</set>
		where id = #{id}
	</update>

	<delete id="delete" parameterType="map">
		delete from tbl_action
		<where>
			<if test="id != null">
				 id = #{id}
			</if>
		</where>
	</delete>

	<select id="selectById" parameterType="int" resultMap="ActionWithRolesResult">
		<include refid="columns" />
		<include refid="self_table" />
		where a.id = #{id}
	</select>
	
	<select id="selectByRoleId" parameterType="int" resultMap="ActionResult">
		select
		a.*
		from tbl_role_action ra inner join tbl_action a
		on ra.role_id = #{id} 
		and ra.action_id = a.id
	</select>	

	<select id="selectByCriteria" parameterType="map" resultMap="ActionWithRolesResult">
		<include refid="columns" />
		<include refid="joined_tables" />
		<include refid="criterias" />
		<include refid="orders" />
		<if test="offset != null and limit !=null and offset &gt; -1 and limit &gt; 0">
			offset #{offset} rows
			fetch next #{limit} rows only;
		</if>
	</select>

	<select id="selectCountByCriteria" resultType="int" parameterType="map">
		select count(distinct a.id)
		<include refid="joined_tables" />
		<include refid="criterias" />
	</select>

	<select id="selectAllPageNames" resultType="String">
		select page
		<include refid="self_table" />
		group by page
		order by page desc
	</select>
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mycom.products.mywebsite.core.mapper.config.RoleActionMapper">

	<resultMap 	type="RoleActionBean" 		id="Parent_RoleRoleActionResult">
		<result property="roleId" 			column="role_id" />
		<result property="actionId" 		column="action_id" />
	</resultMap>
	
	<resultMap 	 	 type="RoleActionBean" 		id="RoleActionResult" extends="Parent_RoleRoleActionResult">
		<result 	 property="recordRegId" 	column="record_reg_id"/>
		<result 	 property="recordUpdId" 	column="record_upd_id"/>
		<result 	 property="recordRegDate" 	column="record_reg_date"/>
		<result 	 property="recordUpdDate" 	column="record_upd_date"/>	
		<association property="role" 			resultMap="com.mycom.products.mywebsite.core.mapper.config.RoleMapper.Parent_RoleResult" />
		<association property="action" 			resultMap="com.mycom.products.mywebsite.core.mapper.config.ActionMapper.Parent_RoleActionResult" />
	</resultMap>

	<sql id="tables">
		FROM mjr_role_action roleAction
		<if test="fetchMode !=null and fetchMode.name() == 'EAGER'">
			INNER JOIN mjr_role role ON roleAction.role_id = role.id
			INNER JOIN mjr_action action ON roleAction.action_id = action.id
		</if>		
	</sql>
	
	<sql id="meta_columns">
		roleAction.record_reg_id,
		roleAction.record_upd_id,
		roleAction.record_reg_date,
		roleAction.record_upd_date,	
	</sql>
			
	<sql id="main_columns">
		roleAction.role_id,
		roleAction.action_id
	</sql>
	
	<sql id="columns">
		<include refid="meta_columns" />
		<include refid="main_columns" />
		<if test="fetchMode !=null and fetchMode.name() == 'EAGER'">
			,<include refid="com.mycom.products.mywebsite.core.mapper.config.RoleMapper.main_columns" />
			,<include refid="com.mycom.products.mywebsite.core.mapper.config.ActionMapper.main_columns" />
		</if>		
	</sql>

	<sql id="criterias">
		<where>
			<if test="roleId != null">
				and role_id = #{roleId}
			</if>
			<if test="actionId != null">
				and action_id = #{actionId}
			</if>
		</where>
	</sql>
		
	<sql id="orders">
		order by
		<choose>
			<when test="orderBy == 'roleId'">
				role_id ${orderAs}
			</when>
			<when test="orderBy == 'actionId'">
				action_id ${orderAs}
			</when>
			<otherwise>
				role_id DESC
			</otherwise>
		</choose>
	</sql>
	
	<insert id="insert" parameterType="RoleActionBean">
		insert into mjr_role_action(
		role_id,
		action_id,
		record_reg_id,
		record_upd_id,
		record_reg_date,
		record_upd_date		
		) values (
		#{role.id},
		#{action.id},
		#{recordRegId},
		#{recordUpdId},
		#{recordRegDate},
		#{recordUpdDate}		
		)
	</insert>
	
	<update id="update" parameterType="RoleActionBean">
		update mjr_role_action
		<set>
			record_upd_id = #{recordUpdId},
			record_upd_date = getDate(),		
			<if test="role.id !=null"> role_id= #{role.id},</if>
			<if test="action.id !=null">action_id= #{action.id},</if>
		</set>
		<where>
			<if test="role.id != null">
				 role_id = #{role.id}
			</if>
			<if test="action.id != null">
				 and action_id = #{action.id}
			</if>			
		</where>
	</update>

	<delete id="delete" parameterType="map">
		delete from mjr_role_action
		<where>
			<if test="roleId != null">
				and role_id = ${roleId}
			</if>
			<if test="actionId != null">
				and action_id = ${actionId}
			</if>			
		</where>
	</delete>

	<select id="selectMultiRecords"  resultMap="RoleActionResult">
		SELECT
		<include refid="columns"  />
		<include refid="tables" />
		<include refid="criterias" />
		<include refid="orders" />
		<if test="criteria !=null and criteria.offset != null and criteria.limit !=null and criteria.offset &gt; -1 and criteria.limit &gt; 0">
			OFFSET #{criteria.offset} ROWS
			FETCH NEXT #{criteria.limit} ROWS ONLY;
		</if>
	</select>

	<select id="selectCounts" resultType="long">
		SELECT count(DISTINCT action.id)
		<include refid="tables" />
		<include refid="criterias" />
	</select>
</mapper>